From 22cff5439ca33c0beafd6a77c160959dff7fddf7 Mon Sep 17 00:00:00 2001
From: a-kenji <aks.kenji@protonmail.com>
Date: Wed, 16 Mar 2022 21:49:41 +0100
Subject: [PATCH 1/3] fix(feat): `disable_automatic_asset_installation`

This fixes a regression in the feature system:
The asset installation didn't get turned off by the feature.

Add error logging to the install functions.

Properly show features in setup

* fix(feat): disable `mkdir` in wasm_wm

The `wasm_vm` creates the `plugin_dir` before mounting it.
Turn that behavior off on `feature-disable-asset-installation`.

Alternative:
    Is this even needed? We make sure the directory is there upon the
    normal asset installation.

fixes #1130
---
 Cargo.toml                   |  2 +-
 src/commands.rs              |  1 -
 src/install.rs               | 14 +++++++++++---
 zellij-server/src/wasm_vm.rs |  4 +++-
 zellij-utils/Cargo.toml      |  2 ++
 5 files changed, 17 insertions(+), 6 deletions(-)

diff --git a/Cargo.toml b/Cargo.toml
index 78457fdcb..e522a11f1 100644
--- a/Cargo.toml
+++ b/Cargo.toml
@@ -64,4 +64,4 @@ bin-dir = "{ bin }{ binary-ext }"
 pkg-fmt = "tgz"
 
 [features]
-disable_automatic_asset_installation = []
+disable_automatic_asset_installation = [ "zellij-utils/disable_automatic_asset_installation" ]
diff --git a/src/commands.rs b/src/commands.rs
index 542741343..cfbcb8f08 100644
--- a/src/commands.rs
+++ b/src/commands.rs
@@ -89,7 +89,6 @@ fn create_new_client() -> ClientInfo {
 
 fn install_default_assets(opts: &CliArgs) {
     let data_dir = opts.data_dir.clone().unwrap_or_else(get_default_data_dir);
-    #[cfg(not(disable_automatic_asset_installation))]
     populate_data_dir(&data_dir);
 }
 
diff --git a/src/install.rs b/src/install.rs
index e7778dde2..3ba682e75 100644
--- a/src/install.rs
+++ b/src/install.rs
@@ -1,7 +1,10 @@
+#[cfg(not(feature = "disable_automatic_asset_installation"))]
 use std::fs;
 use std::path::Path;
+#[cfg(not(feature = "disable_automatic_asset_installation"))]
 use zellij_utils::{consts::VERSION, shared::set_permissions};
 
+#[cfg(not(feature = "disable_automatic_asset_installation"))]
 macro_rules! asset_map {
     ($($src:literal => $dst:literal),+ $(,)?) => {
         {
@@ -14,6 +17,7 @@ macro_rules! asset_map {
     }
 }
 
+#[cfg(not(feature = "disable_automatic_asset_installation"))]
 pub(crate) fn populate_data_dir(data_dir: &Path) {
     // First run installation of default plugins & layouts
     let mut assets = asset_map! {
@@ -29,10 +33,14 @@ pub(crate) fn populate_data_dir(data_dir: &Path) {
     for (path, bytes) in assets {
         let path = data_dir.join(path);
         let parent_path = path.parent().unwrap();
-        fs::create_dir_all(parent_path).unwrap();
-        set_permissions(parent_path).unwrap();
+        fs::create_dir_all(parent_path).unwrap_or_else(|e| log::error!("{:?}", e));
+        set_permissions(parent_path).unwrap_or_else(|e| log::error!("{:?}", e));
         if out_of_date || !path.exists() {
-            fs::write(path, bytes).expect("Failed to install default assets!");
+            fs::write(path, bytes)
+                .unwrap_or_else(|e| log::error!("Failed to install default assets! {:?}", e));
         }
     }
 }
+
+#[cfg(feature = "disable_automatic_asset_installation")]
+pub(crate) fn populate_data_dir(_data_dir: &Path) {}
diff --git a/zellij-server/src/wasm_vm.rs b/zellij-server/src/wasm_vm.rs
index ebea0b8c9..68867fd7d 100644
--- a/zellij-server/src/wasm_vm.rs
+++ b/zellij-server/src/wasm_vm.rs
@@ -92,7 +92,9 @@ pub(crate) fn wasm_thread_main(
     let mut connected_clients: Vec<ClientId> = vec![];
     let plugin_dir = data_dir.join("plugins/");
     let plugin_global_data_dir = plugin_dir.join("data");
-    fs::create_dir_all(&plugin_global_data_dir).unwrap();
+
+    #[cfg(not(feature = "disable_automatic_asset_installation"))]
+    fs::create_dir_all(&plugin_global_data_dir).unwrap_or_else(|e| log::error!("{:?}", e));
 
     loop {
         let (event, mut err_ctx) = bus.recv().expect("failed to receive event on channel");
diff --git a/zellij-utils/Cargo.toml b/zellij-utils/Cargo.toml
index 4e837f5a1..1e3223dd9 100644
--- a/zellij-utils/Cargo.toml
+++ b/zellij-utils/Cargo.toml
@@ -46,3 +46,5 @@ features = ["unstable"]
 [dev-dependencies]
 tempfile = "3.2.0"
 
+[features]
+disable_automatic_asset_installation = [ ]

From e4cc8bc1e6b029ba7c61b12b60fc2916bd181157 Mon Sep 17 00:00:00 2001
From: a-kenji <aks.kenji@protonmail.com>
Date: Thu, 17 Mar 2022 08:13:08 +0100
Subject: [PATCH 2/3] fixup: make assets installation more robust

---
 src/install.rs | 17 +++++++++++------
 1 file changed, 11 insertions(+), 6 deletions(-)

diff --git a/src/install.rs b/src/install.rs
index 3ba682e75..047c23707 100644
--- a/src/install.rs
+++ b/src/install.rs
@@ -32,12 +32,17 @@ pub(crate) fn populate_data_dir(data_dir: &Path) {
 
     for (path, bytes) in assets {
         let path = data_dir.join(path);
-        let parent_path = path.parent().unwrap();
-        fs::create_dir_all(parent_path).unwrap_or_else(|e| log::error!("{:?}", e));
-        set_permissions(parent_path).unwrap_or_else(|e| log::error!("{:?}", e));
-        if out_of_date || !path.exists() {
-            fs::write(path, bytes)
-                .unwrap_or_else(|e| log::error!("Failed to install default assets! {:?}", e));
+        // TODO: Is the [path.parent()] really necessary here?
+        // We already have the path and the parent through `data_dir`
+        if let Some(parent_path) = path.parent() {
+            fs::create_dir_all(parent_path).unwrap_or_else(|e| log::error!("{:?}", e));
+            set_permissions(parent_path).unwrap_or_else(|e| log::error!("{:?}", e));
+            if out_of_date || !path.exists() {
+                fs::write(path, bytes)
+                    .unwrap_or_else(|e| log::error!("Failed to install default assets! {:?}", e));
+            }
+        } else {
+            log::error!("The path {:?} has no parent directory", path);
         }
     }
 }

From 3506ca50de0ab5443479011e44f750845f6bf5e1 Mon Sep 17 00:00:00 2001
From: a-kenji <aks.kenji@protonmail.com>
Date: Thu, 17 Mar 2022 08:22:09 +0100
Subject: [PATCH 3/3] fix(feat): disable `mkdir` in `wasm_vm`

disable `mkdir` in `wasm_vm` on `feature-disable-asset-installation`
---
 zellij-server/src/wasm_vm.rs | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/zellij-server/src/wasm_vm.rs b/zellij-server/src/wasm_vm.rs
index 68867fd7d..d4796a3a7 100644
--- a/zellij-server/src/wasm_vm.rs
+++ b/zellij-server/src/wasm_vm.rs
@@ -272,7 +272,14 @@ fn start_plugin(
     let input = Pipe::new();
     let stderr = LoggingPipe::new(&plugin.location.to_string(), plugin_id);
     let plugin_own_data_dir = plugin_global_data_dir.join(Url::from(&plugin.location).to_string());
-    fs::create_dir_all(&plugin_own_data_dir).unwrap();
+    #[cfg(not(feature = "disable_automatic_asset_installation"))]
+    fs::create_dir_all(&plugin_own_data_dir).unwrap_or_else(|e| {
+        log::error!(
+            "Could not create plugin_own_data_dir in {:?} \n Error: {:?}",
+            &plugin_own_data_dir,
+            e
+        )
+    });
 
     let mut wasi_env = WasiState::new("Zellij")
         .env("CLICOLOR_FORCE", "1")
